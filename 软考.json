{
  "CPU":"Central Processing Unit",
  "CPU中的寄存器":"
  通用寄存器，暂存运算器需要的数据或运算结果，
  地址寄存器，访问内存时的地址，
  数据寄存器，访问内存时的数据暂存，
  指令寄存器，暂存正在执行的指令，
  程序计数器，存放待执行的指令的地址
  ",
  "指令系统":"指令系统是计算机硬件的语言系统，也叫机器语言，指的是机器所具有的全部指令
  的集合。一条指令就是机器语言的一个语句，他是一组有意义的二进制代码，指令的基本格式如：
  操作码字段+地址码字段，其中操作码指明了指令的操作性质及功能，地址码则给出了操作数或操
  作数的地址",
  "寻址方式":"根据指令内容确定操作数地址的过程称为寻址。
  1. 直接寻址，指令地址域中表示的是操作数地址，
  2. 间接寻址，指令地址域中表示的是操作数地址的地址，
  3. 立即寻址，指令地址域中表示的是操作数本身（立即数寻址），
  4. 变址寻址，指令地址域中表示的是变址寄存器号和位移值D（寄存器寻址），
  5. 相对寻址，指令地址域中表示的是位移值D，
  立即数寻址和寄存器寻址在效率上是最快的",
  "总线结构":"总线（Bus）是计算机各种功能部件之间传送信息的公共通信干线，它是由导线组成
  的传输线束，计算机的总线可以划分为数据总线、地址总线和控制总线，分别用来传输数据、数据
  地址和控制信号。
  采用总线结构主要有以下优点：
  简化系统结构，便于系统设计制造
  减少了连接线数目，便于布线，减小体积，提高系统的可靠性，
  便于接口设计，所有与总线连接的设备均采用类似的接口，
  便于系统的扩充、更新与灵活配置，易于实现系统的模块化
  便于设备的软件设计
  便于故障诊断和维修
  ",
  "原码、反码、补码":"
  三种表示方法均有符号位和数值位两部分，符号位都是用0表示正，1表示负，而对于数值位三种表
  示方法各不相同。
  数值一律用补码来表示和存储，原因在于使用补码可以将符号位和数值域统一处理，同时加法和减
  法也可以统一处理
  ",
  "可靠度":"
  可靠度描述了产品在（0，t）的时间内完好的概率，
  ",
  "数字证书":"数字证书是由权威机构--CA证书授权（Certificate Authority）中心发行的，能
  提供在Internet上进行身份验证的一种权威性电子文档，人们可以在互联网交往中用它来证明自己
  的身份和识别对方的身份。
  数字证书包含版本、序列号、签名算法标识符、签发人姓名、有效期、主体名、主体公钥信息等并
  附有CA的签名，用户A获取用户B的数字证书后通过验证CA的签名来确认数字证书的有效性，验证CA
  的签名时使用的是CA的公钥",
  "宏病毒":"病毒文件名称一般分为三部分，第一部分表示病毒的类型，
  Worm，表示蠕虫病毒
  Trojan，表示特洛伊木马
  Backdoor，表示后门病毒
  Macro，表示宏病毒
  宏病毒感染的对象是使用某些程序创建的文本文档、数据库、电子表格等文件",
  "软件著作权的翻译权":"将原软件从一种程序语言转换成另一种程序语言的权利",
  "商业秘密的构成条件":"
  未公开性，不为公众所知悉
  实用性，能为权利人带来经济效益
  保密性，采取了保密措施",
  "编码方法":"
  哈夫编码，是一种一致性编码法（又称熵编码法），用于数据的无损耗压缩，它根据每一个源字符
  出现的估算概率建立起来，出现概率高的字符使用较短的编码，出现概率低的使用较长的编码，这
  使得编码之后的字符串的平均期望长度降低，从而达到无损压缩数据的目的
  小波变换编码
  线性预测编码
  行程编码",
  "CIF视频格式":"Common Intermediate Format，在H.323协议族中规定了标准采集分辨率，
  352X288像素",
  "MPEG":"MPEG-7称为多媒体内容描述接口（multimedia content description interface），
  该标准是建立对多媒体内容的描述标准",
  "耦合类型":"耦合是模块之间的相对独立性的度量，模块之间的链接越紧密，联系越多，耦合性就
  越高，而其模块独立性就越弱，耦合性从低到高
  非直接耦合
  数据耦合，模块之间通过数据参数（不是控制参数、公共数据结构或外部变量）来交换输入、输出
  信息。
  标记耦合，通过数据结构本身传递的耦合方式
  控制耦合
  外部耦合
  公共耦合，均访问同一个公共数据环境
  内容耦合，一个模块直接访问另一个模块的内部数据、一个模块不通过正常入口转到另一个模块内
  部、两个模块有一部分程序代码重叠或者一个模块有多个入口",
  "项目估算方法":"
  专家判断方法
  启发式方法
  ",
  "逆波兰式":"reverse polish notation，也叫后缀表达式，是将运算符写在操作数之后的表达
  式表示方法，对逆波兰式进行求值的方法是：从左至右的扫描表达式，遇到操作数则压栈，遇到运
  算符号则从栈中弹出操作数进行运算，然后将运算结果压入栈中，重复该过程直到表达式结束，最
  后的结果为栈顶元素",
  "系统字长":"32位系统字长可以记录32个物理块的使用情况",
  "操作系统存储管理":"置换页面的原则如下表，先置换访问位和修改位为00的页，在置换01的页，
  然后是10的页，最后置换11的页",
  "软件过程模型":"
  瀑布模型，从一种非常高层的角度描述了软件开发过程进行的活动，并且提出了要求开发人员经过
  的事件序列，该模型适用于项目开始时需求已确定的情况
  V模型是瀑布模型的变种，它说明测试活动是如何与分析和设计相联系的。
  原型模型，允许开发人员快速地构造整个系统或系统的一部分以理解或澄清问题，原型的用途是获
  知用户的真正需求，因此原型模型可以有效地引发系统需求。
  螺旋模型把开发活动和风险管理结合起来，已将风险减到最小并控制风险。",
  "文档":"文档是指某种数据媒体和其中所记录的数据。高质量的文档应该体现在几个方面
  针对性
  精确性
  清晰性
  完整性
  灵活性
  可追溯性",
  "软件运行与维护":"
  改正性维护，为了识别和纠正软件错误、改正软件性能上的缺陷、排除实施中的误使用，应进行的
  诊断和改正错误的过程
  适应性维护，由于信息技术飞速发展，软件运行的外部环境或数据环境可能会发生变化，为了使软
  件适应这种变化，而修改软件的过程
  完善性维护，在软件使用过程中，用户往往会对软件提出新的功能与性能要求，为了满足这些要求，
  需要修改或再开发软件，以扩充软件功能、增强软件性能、改进加工效率、提高软件的可维护性
  预防性维护，为了提高软件的可维护性和可靠性等，为以后进一步改进软件打下良好的基础而进行
  的维护工作。
  ",
  "软件检查方式":"
  功能测试，检查软件是否能实现需求中指定的那些功能
  性能测试，测试软件的安全性、精确性、速度和可靠性
  回归测试，识别在改正当前故障的同事可能会引入新的故障
  验收测试，客户对系统进行测试以验证软件系统是否符合他们对需求的理解
  ",
  "面向对象分析":"
  认定对象
  组织对象
  描述对象间的相互作用
  定义对象的操作
  定义对象的内部信息
  ",
  "类的静态成员":"
  静态成员的含义是所修饰的成员是属于类的，而不是属于某对象的。静态数据成员对该类只有一份，
  该类的所有对象共享静态数据成员，可被该类的所有方法访问，其值可以修改，但是不论是通过对
  象还是类对静态数据成员值的修改，都会反映到整个类。类的静态方法只能访问到该类的静态数据
  成员
  ",
  "类(class)和对象(object)和实例(instance)":"
  类和对象是两种以计算机为载体的计算机语言的合称。对象是对客观事物的抽象，类是对对象的
  抽象。类是一种抽象的数据类型。
  ",
  "统一建模语言":"Unified Modeling Language, UML, 通常是用一组视图反应系统的各个方面，
  以完整地描述系统，每个视图代表系统描述中的一个抽象，显示系统中的一个特定的方面。
  类图，展现了一组对象、接口、协作和它们之间的关系，可以展现类之间的关联关系，还可以图示多重度
  对象图，展现了一组对象以及其之间的关系，描述了在类图中所建立的事物的实例的静态快照
  序列图，是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动
  通信图，强调收发消息的对象的结构组织
  状态图，展现了一个状态机，由状态、转换、事件和活动组成，它关注的是系统的动态视图
  活动图，是一种特殊的状态图，展现了在系统内从一个活动到另一个活动的流程
  序列图、通信图、交互图和定时图被称为交互图，它们用于对系统的动态方面进行建模
  ",
  "多重度":"表示有多少个实例能被连接起来，即一个类的实例能够与另一个类的多少个实例相关联",
  "面向对象软件开发过程中的设计模式":"以复用成功的设计",
  "设计模式":"
  Bridge（桥接）模式将对象的抽象和其实现分离，从而可以独立地改变它们
  Composite（组合）模式是结构型对象模式的一个实例，他描述了如何构造一个类层次式结构
  Facade（外观）模式则描述了如何用单个对象表示整个子系统
  Singleton（单例）模式保证一个类只产生唯一的一个实例
  Adapter模式是将类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起
  工作的那些类可以一起工作
  Command模式将请求封装在对象中，这样它就可作为参数来传递，也可以被存储在历史列表里
  Strategy（策略模式）定义一系列的算法，把他们一个个封装起来，并使它们可以相互替换，这
  一模式使得算法可以独立于使用它的客户而变化
  ",
  "高级语言程序翻译":"
  词法分析
  语法分析
  语义分析
  中间代码生成
  代码优化
  目标代码生成
  程序中的错误分为语法错误和语义错误
  目标代码生成阶段的工作与目标机器的体系结构是密切相关的
  ",
  "类图":"
  一般化关系，表示类与类之间的继承关系，接口与接口之间的集成，类对接口的实现关系，
  一个空心箭头+实线，箭头指向父类或空心箭头+虚线
  关联关系，一个类知道另一个类的属性和方法
  实线+箭头，箭头指向被使用的类
  聚合关系，属于强的关联关系，聚合关系的两个类处于不同的层次，一个是整体，一个是部分，
  空心菱形+实线+箭头，箭头指向个体
  合成关系，聚合关系的一种，要求整体的对象负责代表部分的对象的生命周期
  实心菱形+实线+箭头
  依赖关系，表示一个类依赖于另一个类的定义，如果A依赖于B，则B体现为局部变量
  虚线+箭头，箭头指向被依赖的一方
  ",
  "信息传递方式":"
  传值调用，是将实参的值传给被调用函数的形参
  引用调用（传地址），将实参的地址传给被调用函数的形参
  ",
  "形参与实参":"
  形参变量只有在被调用是才分配内存单元，在调用结束时，就会释放出所分配的内存，所以形参只
  能在函数内部才有效
  实参是：常量、变量、表达式、函数等
  ",
  "主键":"
  primary key，它的值用于唯一地标识表中的某一条记录，一个表的主键可以由多个关键字共同组成，并
  且主关键字的列不能包含空值。",
  "超关键字":"
  是指一个或多个属性的集合，这个属性的组合可以使我们在一个实体集中唯一地标识一个实体
  ",
  "候选关键字":"
  如果一个超关键字去掉其中任何一个字段后不再能唯一地确定记录，则称它为“候选关键字”，
  Candidate Key，候选关键字是最简单的超关键字
  "





}
